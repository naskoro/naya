**naya.App**
 | + сделать возможным разделять статику и шаблоны;
 | + проверить возможность работы BaseApp без установленной jinja;
 | - добавить app.log();
 | ? прорефакторить url_for, часто используемая функция, нужно больше удобства;
 | + возможность переопределить conf и перегрузить app (переопределение [jinja:shared] работает уже);

**naya.modules**
 | + убрать из module.modules самого себя;
 | + упростить модульную структуру, у апп есть модули и все, не нужна это бесконечная вложеность;
 | + Рефакторинг, оставить Module как класс, App(Module, AppMixin), убрать conf['maps'];

**naya.manage**
 | + нужно убрать установку в окружение, перенести в nanaya;

**naya.jinja**
 | + нужно добавить фильтр разрешенных файлов;
 | + редирект на приоритетный url;
 | + нужно перенести фильтры в nanaya;
 | + нужно добавить возможность загрузки темплейта из модуля, если он переопределен где-то, типа "парент";
 | + сделал рефакторинг 'path_allow/path_deny', 'path_ends' остался;
 | ? прорефакторить loaders, ChoiceLoader использовать первым + PrefixLoader для модулей;

**naya.examples**
 | + включить coverage;
 | + добавить вложеность в модуль;

**naya.marker**
 | + добавить вес для сигналов, чем больше - тем позже вызывается;
 | ? возможность поставить after, before;
 | + подумать над рефакторингом, возможно переименовать в signals, про методы подумать;

**naya.testing**
 | + перенести go в методы TestClient;
 | + сделать метод app.test_client аля Flask;
 | - прорефакторить aye; отказаться от eval, сделать методы: eq, noeq, in ...

**naya.script**
 | + "default host", но при этом иметь возможность делать также локальные команды;
 | + выводить инфу по ходу ее появления, а не в конце выполнения команды, если возможно;
 | - написать что-то типа call_command;
 | - переделать тестирование для make_shell, чтоб учитывался coverage-м;

**naya repo**
 | + переезд на git;
